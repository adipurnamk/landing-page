name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main", "stage" ]
    tags:
      - v*.*.*

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Get current timestamp
      id: timestamp
      run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    # - name: Extract metadata (labels, tags) for Docker
    #   id: meta
    #   uses: docker/metadata-action@v4
    #   with:
    #     # Change this to your image name.  Ex: `docker.io/username/my-app`
    #     images: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/landing-page
    #     flavor: latest=true

    #     # Generate tags for each branch
    #     tags: |
    #       type=ref,event=branch
    #       type=ref,event=pr
    #       type=semver,pattern={{version}}
    #       type=semver,pattern={{major}}.{{minor}}.{{patch}}
          
    #     # Generate image prefixes for each branch
    #     prefixes: |
    #       main=main-
    #       stage=stage-
          
    # - name: Run tests
    #   run: |
    #     # Install dependencies
    #     npm install
    #     # Run tests (assuming you have a test script in package.json)
    #     npm test

    - name: Build Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false # Do not push here, just build
        tags: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/landing-page:${{ github.ref_name }}-${{ env.TIMESTAMP }}
        # labels: ${{ steps.meta.outputs.labels }}
        load: true # Load the image into the local Docker daemon

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/landing-page:${{ github.ref_name }}-${{ env.TIMESTAMP }}
        format: 'table'
        exit-code: 1
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

    - name: Push Docker image
      run: docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/landing-page:${{ github.ref_name }}-${{ env.TIMESTAMP }}