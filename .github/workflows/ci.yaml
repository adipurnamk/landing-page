name: Docker Image CI

on:
  push:
    branches: [ "main", "stage" ]
    tags:
      - v*.*.*

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Extract metadata (labels, tags) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        # Change this to your image name.  Ex: `docker.io/username/my-app`
        image: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/landing-page
        flavor: latest=true

        # Generate tags for each branch
        tags: |
          main=main
          stage=stage
          # Use the tag name as the tag for the image
          ${{ github.ref_name }}=${{ github.ref_name }}

        # Generate image prefixes for each branch
        prefixes: |
          main=main-
          stage=stage-
          
    - name: Run tests
      run: |
        # Install dependencies
        npm install
        # Run tests (assuming you have a test script in package.json)
        npm test

    - name: Build Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false # Do not push here, just build
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        load: true # Load the image into the local Docker daemon

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/landing-page:${{ github.ref_name }}
        format: 'table'
        exit-code: 1
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

    - name: Push Docker image
      run: docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/landing-page:${{ github.ref_name }}